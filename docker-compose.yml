version: '3'
services:

  # Laravel App
  AppServer:
    build:
      context: ./
      dockerfile: ./AppServer/Dockerfile
    image: laravel-server:init
    container_name: AppServer
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www/html/AppServer
    volumes:
      - ./:/var/www/html
    networks:
      - serverConnector
      - flaskConnector
      - dbConnector

  #Nginx Service
  NginxServer:
    image: nginx:latest
    container_name: NginxServer
    restart: always
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html
      - ./nginx/:/etc/nginx/conf.d/
    networks:
      - serverConnector

  #Flask Service
  flask:
    build:
      context: ./
      dockerfile: ./flask/Dockerfile
    image: flask-ml-server:init
    container_name: flask
    restart: always
    working_dir: /usr/src/flask
    environment:
      FLASK_CONFIG: development
      FLASK_APP: run.py
      LC_ALL: C.UTF-8
      LANG: C.UTF-8
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: testing
      DB_USERNAME: root
      DB_PASSWORD: root
    volumes:
      - ./:/usr/src/
    ports:
      - 5000:5000
    networks:
      - flaskConnector
      - dbConnector

  #MySQL Service
  urls:
    image: mysql:5.7
    container_name: db
    restart: unless-stopped
    tty: true
    expose:
      - 3306
    environment:
      MYSQL_DATABASE: PhishingDetection
      MYSQL_USER: admin
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - phishingData:/var/lib/mysql/
    networks:
      - dbConnector

  #PhpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    depends_on:
      - urls
    ports:
      - "8183:80"
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
    volumes:
      - /session
    networks:
      - dbConnector

#Docker Networks
networks:
  dbConnector:
    driver: bridge
  flaskConnector:
    driver: bridge
  serverConnector:
    driver: bridge
#Volumes
volumes:
  phishingData:
    driver: local